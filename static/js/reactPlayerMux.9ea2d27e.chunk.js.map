{"version":3,"sources":["../node_modules/react-player/lib/players/Mux.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Mux_exports","target","all","name","__export","default","Mux","module","exports","import_react","isNodeMode","__esModule","__toESM","__webpack_require__","import_patterns","SDK_URL","Component","[object Object]","_this","super","arguments","this","props","onReady","onPlay","onBuffer","onBufferEnd","onPause","onEnded","onError","event","onPlaybackRateChange","playbackRate","onEnablePIP","e","onSeek","currentTime","duration","getDuration","onDuration","player","muted","onMount","addListeners","playbackId","getPlaybackId","url","removeListeners","playsinline","addEventListener","onPlayBackRateChange","onDisablePIP","onPresentationModeChange","setAttribute","removeEventListener","_a","config","globalThis","customElements","sdkUrl","replace","version","import","onLoaded","error","id","match","MATCH_URL_MUX","promise","play","catch","pause","seconds","keepPlaying","length","undefined","fraction","volume","requestPictureInPicture","document","pictureInPictureElement","exitPictureInPicture","rate","seekable","Infinity","end","buffered","playing","loop","controls","width","height","style","createElement","ref","playback-id","preload","autoPlay","attributes","canPlay","mux"],"mappings":"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","file":"static/js/reactPlayerMux.9ea2d27e.chunk.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Mux_exports = {};\n__export(Mux_exports, {\n  default: () => Mux\n});\nmodule.exports = __toCommonJS(Mux_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://cdn.jsdelivr.net/npm/@mux/mux-player@VERSION/dist/mux-player.mjs\";\nclass Mux extends import_react.Component {\n  constructor() {\n    var _this;\n    // Proxy methods to prevent listener leaks\n    super(...arguments);\n    _this = this;\n    __publicField(this, \"onReady\", function () {\n      return _this.props.onReady(...arguments);\n    });\n    __publicField(this, \"onPlay\", function () {\n      return _this.props.onPlay(...arguments);\n    });\n    __publicField(this, \"onBuffer\", function () {\n      return _this.props.onBuffer(...arguments);\n    });\n    __publicField(this, \"onBufferEnd\", function () {\n      return _this.props.onBufferEnd(...arguments);\n    });\n    __publicField(this, \"onPause\", function () {\n      return _this.props.onPause(...arguments);\n    });\n    __publicField(this, \"onEnded\", function () {\n      return _this.props.onEnded(...arguments);\n    });\n    __publicField(this, \"onError\", function () {\n      return _this.props.onError(...arguments);\n    });\n    __publicField(this, \"onPlayBackRateChange\", event => this.props.onPlaybackRateChange(event.target.playbackRate));\n    __publicField(this, \"onEnablePIP\", function () {\n      return _this.props.onEnablePIP(...arguments);\n    });\n    __publicField(this, \"onSeek\", e => {\n      this.props.onSeek(e.target.currentTime);\n    });\n    __publicField(this, \"onDurationChange\", () => {\n      const duration = this.getDuration();\n      this.props.onDuration(duration);\n    });\n    __publicField(this, \"mute\", () => {\n      this.player.muted = true;\n    });\n    __publicField(this, \"unmute\", () => {\n      this.player.muted = false;\n    });\n    __publicField(this, \"ref\", player => {\n      this.player = player;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n    this.addListeners(this.player);\n    const playbackId = this.getPlaybackId(this.props.url);\n    if (playbackId) {\n      this.player.playbackId = playbackId;\n    }\n  }\n  componentWillUnmount() {\n    this.player.playbackId = null;\n    this.removeListeners(this.player);\n  }\n  addListeners(player) {\n    const {\n      playsinline\n    } = this.props;\n    player.addEventListener(\"play\", this.onPlay);\n    player.addEventListener(\"waiting\", this.onBuffer);\n    player.addEventListener(\"playing\", this.onBufferEnd);\n    player.addEventListener(\"pause\", this.onPause);\n    player.addEventListener(\"seeked\", this.onSeek);\n    player.addEventListener(\"ended\", this.onEnded);\n    player.addEventListener(\"error\", this.onError);\n    player.addEventListener(\"ratechange\", this.onPlayBackRateChange);\n    player.addEventListener(\"enterpictureinpicture\", this.onEnablePIP);\n    player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    player.addEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\n    player.addEventListener(\"canplay\", this.onReady);\n    if (playsinline) {\n      player.setAttribute(\"playsinline\", \"\");\n    }\n  }\n  removeListeners(player) {\n    player.removeEventListener(\"canplay\", this.onReady);\n    player.removeEventListener(\"play\", this.onPlay);\n    player.removeEventListener(\"waiting\", this.onBuffer);\n    player.removeEventListener(\"playing\", this.onBufferEnd);\n    player.removeEventListener(\"pause\", this.onPause);\n    player.removeEventListener(\"seeked\", this.onSeek);\n    player.removeEventListener(\"ended\", this.onEnded);\n    player.removeEventListener(\"error\", this.onError);\n    player.removeEventListener(\"ratechange\", this.onPlayBackRateChange);\n    player.removeEventListener(\"enterpictureinpicture\", this.onEnablePIP);\n    player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    player.removeEventListener(\"canplay\", this.onReady);\n  }\n  async load(url) {\n    var _a;\n    const {\n      onError,\n      config\n    } = this.props;\n    if (!((_a = globalThis.customElements) == null ? void 0 : _a.get(\"mux-player\"))) {\n      try {\n        const sdkUrl = SDK_URL.replace(\"VERSION\", config.version);\n        await import(/* webpackIgnore: true */\n        `${sdkUrl}`);\n        this.props.onLoaded();\n      } catch (error) {\n        onError(error);\n      }\n    }\n    const [, id] = url.match(import_patterns.MATCH_URL_MUX);\n    this.player.playbackId = id;\n  }\n  play() {\n    const promise = this.player.play();\n    if (promise) {\n      promise.catch(this.props.onError);\n    }\n  }\n  pause() {\n    this.player.pause();\n  }\n  stop() {\n    this.player.playbackId = null;\n  }\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.player.currentTime = seconds;\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.player.volume = fraction;\n  }\n  enablePIP() {\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\n      this.player.requestPictureInPicture();\n    }\n  }\n  disablePIP() {\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\n      document.exitPictureInPicture();\n    }\n  }\n  setPlaybackRate(rate) {\n    try {\n      this.player.playbackRate = rate;\n    } catch (error) {\n      this.props.onError(error);\n    }\n  }\n  getDuration() {\n    if (!this.player) return null;\n    const {\n      duration,\n      seekable\n    } = this.player;\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1);\n    }\n    return duration;\n  }\n  getCurrentTime() {\n    if (!this.player) return null;\n    return this.player.currentTime;\n  }\n  getSecondsLoaded() {\n    if (!this.player) return null;\n    const {\n      buffered\n    } = this.player;\n    if (buffered.length === 0) {\n      return 0;\n    }\n    const end = buffered.end(buffered.length - 1);\n    const duration = this.getDuration();\n    if (end > duration) {\n      return duration;\n    }\n    return end;\n  }\n  getPlaybackId(url) {\n    const [, id] = url.match(import_patterns.MATCH_URL_MUX);\n    return id;\n  }\n  render() {\n    const {\n      url,\n      playing,\n      loop,\n      controls,\n      muted,\n      config,\n      width,\n      height\n    } = this.props;\n    const style = {\n      width: width === \"auto\" ? width : \"100%\",\n      height: height === \"auto\" ? height : \"100%\"\n    };\n    if (controls === false) {\n      style[\"--controls\"] = \"none\";\n    }\n    return /* @__PURE__ */import_react.default.createElement(\"mux-player\", {\n      ref: this.ref,\n      \"playback-id\": this.getPlaybackId(url),\n      style,\n      preload: \"auto\",\n      autoPlay: playing || void 0,\n      muted: muted ? \"\" : void 0,\n      loop: loop ? \"\" : void 0,\n      ...config.attributes\n    });\n  }\n}\n__publicField(Mux, \"displayName\", \"Mux\");\n__publicField(Mux, \"canPlay\", import_patterns.canPlay.mux);"],"sourceRoot":""}