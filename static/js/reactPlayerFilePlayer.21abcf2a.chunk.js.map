{"version":3,"sources":["../node_modules/react-player/lib/players/FilePlayer.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","FilePlayer_exports","target","all","name","__export","default","FilePlayer","module","exports","import_react","isNodeMode","__esModule","__toESM","__webpack_require__","import_utils","import_patterns","HAS_NAVIGATOR","navigator","IS_IPAD_PRO","platform","maxTouchPoints","IS_IOS","test","userAgent","window","MSStream","IS_SAFARI","HLS_SDK_URL","HLS_GLOBAL","DASH_SDK_URL","DASH_GLOBAL","FLV_SDK_URL","FLV_GLOBAL","MATCH_DROPBOX_URL","MATCH_CLOUDFLARE_STREAM","REPLACE_CLOUDFLARE_STREAM","Component","[object Object]","_this","super","arguments","this","props","onReady","onPlay","onBuffer","onBufferEnd","onPause","onEnded","onError","event","onPlaybackRateChange","playbackRate","onEnablePIP","e","onDisablePIP","playing","play","player","supportsWebKitPresentationMode","webkitPresentationMode","onSeek","currentTime","muted","source","index","createElement","src","track","prevPlayer","onMount","addListeners","getSource","url","config","forceDisableHls","load","prevProps","shouldUseAudio","removeListeners","isMediaStream","Array","srcObject","removeAttribute","hls","destroy","playsinline","addEventListener","onPlayBackRateChange","onPresentationModeChange","shouldUseHLS","setAttribute","removeEventListener","forceVideo","attributes","poster","AUDIO_EXTENSIONS","forceAudio","forceSafariHLS","forceHLS","HLS_EXTENSIONS","DASH_EXTENSIONS","forceDASH","FLV_EXTENSIONS","forceFLV","hlsVersion","hlsOptions","dashVersion","flvVersion","dash","reset","getSDK","replace","then","Hls","on","Events","MANIFEST_PARSED","ERROR","data","id","match","loadSource","attachMedia","onLoaded","shouldUseDASH","dashjs","MediaPlayer","initialize","parseInt","getDebug","setLogToBrowserConsole","updateSettings","debug","logLevel","Debug","LOG_LEVEL_NONE","shouldUseFLV","flvjs","flv","createPlayer","type","attachMediaElement","URL","createObjectURL","promise","catch","pause","seconds","keepPlaying","length","undefined","fraction","volume","requestPictureInPicture","document","pictureInPictureElement","webkitSetPresentationMode","exitPictureInPicture","rate","error","duration","seekable","Infinity","end","buffered","getDuration","useHLS","useDASH","useFLV","loop","controls","width","height","Element","style","ref","preload","autoPlay","map","renderSourceElement","tracks","renderTrack","canPlay","file"],"mappings":"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","file":"static/js/reactPlayerFilePlayer.21abcf2a.chunk.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar FilePlayer_exports = {};\n__export(FilePlayer_exports, {\n  default: () => FilePlayer\n});\nmodule.exports = __toCommonJS(FilePlayer_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst HAS_NAVIGATOR = typeof navigator !== \"undefined\";\nconst IS_IPAD_PRO = HAS_NAVIGATOR && navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\nconst IS_IOS = HAS_NAVIGATOR && (/iPad|iPhone|iPod/.test(navigator.userAgent) || IS_IPAD_PRO) && !window.MSStream;\nconst IS_SAFARI = HAS_NAVIGATOR && /^((?!chrome|android).)*safari/i.test(navigator.userAgent) && !window.MSStream;\nconst HLS_SDK_URL = \"https://cdn.jsdelivr.net/npm/hls.js@VERSION/dist/hls.min.js\";\nconst HLS_GLOBAL = \"Hls\";\nconst DASH_SDK_URL = \"https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js\";\nconst DASH_GLOBAL = \"dashjs\";\nconst FLV_SDK_URL = \"https://cdn.jsdelivr.net/npm/flv.js@VERSION/dist/flv.min.js\";\nconst FLV_GLOBAL = \"flvjs\";\nconst MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/;\nconst MATCH_CLOUDFLARE_STREAM = /https:\\/\\/watch\\.cloudflarestream\\.com\\/([a-z0-9]+)/;\nconst REPLACE_CLOUDFLARE_STREAM = \"https://videodelivery.net/{id}/manifest/video.m3u8\";\nclass FilePlayer extends import_react.Component {\n  constructor() {\n    var _this;\n    // Proxy methods to prevent listener leaks\n    super(...arguments);\n    _this = this;\n    __publicField(this, \"onReady\", function () {\n      return _this.props.onReady(...arguments);\n    });\n    __publicField(this, \"onPlay\", function () {\n      return _this.props.onPlay(...arguments);\n    });\n    __publicField(this, \"onBuffer\", function () {\n      return _this.props.onBuffer(...arguments);\n    });\n    __publicField(this, \"onBufferEnd\", function () {\n      return _this.props.onBufferEnd(...arguments);\n    });\n    __publicField(this, \"onPause\", function () {\n      return _this.props.onPause(...arguments);\n    });\n    __publicField(this, \"onEnded\", function () {\n      return _this.props.onEnded(...arguments);\n    });\n    __publicField(this, \"onError\", function () {\n      return _this.props.onError(...arguments);\n    });\n    __publicField(this, \"onPlayBackRateChange\", event => this.props.onPlaybackRateChange(event.target.playbackRate));\n    __publicField(this, \"onEnablePIP\", function () {\n      return _this.props.onEnablePIP(...arguments);\n    });\n    __publicField(this, \"onDisablePIP\", e => {\n      const {\n        onDisablePIP,\n        playing\n      } = this.props;\n      onDisablePIP(e);\n      if (playing) {\n        this.play();\n      }\n    });\n    __publicField(this, \"onPresentationModeChange\", e => {\n      if (this.player && (0, import_utils.supportsWebKitPresentationMode)(this.player)) {\n        const {\n          webkitPresentationMode\n        } = this.player;\n        if (webkitPresentationMode === \"picture-in-picture\") {\n          this.onEnablePIP(e);\n        } else if (webkitPresentationMode === \"inline\") {\n          this.onDisablePIP(e);\n        }\n      }\n    });\n    __publicField(this, \"onSeek\", e => {\n      this.props.onSeek(e.target.currentTime);\n    });\n    __publicField(this, \"mute\", () => {\n      this.player.muted = true;\n    });\n    __publicField(this, \"unmute\", () => {\n      this.player.muted = false;\n    });\n    __publicField(this, \"renderSourceElement\", (source, index) => {\n      if (typeof source === \"string\") {\n        return /* @__PURE__ */import_react.default.createElement(\"source\", {\n          key: index,\n          src: source\n        });\n      }\n      return /* @__PURE__ */import_react.default.createElement(\"source\", {\n        key: index,\n        ...source\n      });\n    });\n    __publicField(this, \"renderTrack\", (track, index) => {\n      return /* @__PURE__ */import_react.default.createElement(\"track\", {\n        key: index,\n        ...track\n      });\n    });\n    __publicField(this, \"ref\", player => {\n      if (this.player) {\n        this.prevPlayer = this.player;\n      }\n      this.player = player;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n    this.addListeners(this.player);\n    const src = this.getSource(this.props.url);\n    if (src) {\n      this.player.src = src;\n    }\n    if (IS_IOS || this.props.config.forceDisableHls) {\n      this.player.load();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\n      this.removeListeners(this.prevPlayer, prevProps.url);\n      this.addListeners(this.player);\n    }\n    if (this.props.url !== prevProps.url && !(0, import_utils.isMediaStream)(this.props.url) && !(this.props.url instanceof Array)) {\n      this.player.srcObject = null;\n    }\n  }\n  componentWillUnmount() {\n    this.player.removeAttribute(\"src\");\n    this.removeListeners(this.player);\n    if (this.hls) {\n      this.hls.destroy();\n    }\n  }\n  addListeners(player) {\n    const {\n      url,\n      playsinline\n    } = this.props;\n    player.addEventListener(\"play\", this.onPlay);\n    player.addEventListener(\"waiting\", this.onBuffer);\n    player.addEventListener(\"playing\", this.onBufferEnd);\n    player.addEventListener(\"pause\", this.onPause);\n    player.addEventListener(\"seeked\", this.onSeek);\n    player.addEventListener(\"ended\", this.onEnded);\n    player.addEventListener(\"error\", this.onError);\n    player.addEventListener(\"ratechange\", this.onPlayBackRateChange);\n    player.addEventListener(\"enterpictureinpicture\", this.onEnablePIP);\n    player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    player.addEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\n    if (!this.shouldUseHLS(url)) {\n      player.addEventListener(\"canplay\", this.onReady);\n    }\n    if (playsinline) {\n      player.setAttribute(\"playsinline\", \"\");\n      player.setAttribute(\"webkit-playsinline\", \"\");\n      player.setAttribute(\"x5-playsinline\", \"\");\n    }\n  }\n  removeListeners(player, url) {\n    player.removeEventListener(\"canplay\", this.onReady);\n    player.removeEventListener(\"play\", this.onPlay);\n    player.removeEventListener(\"waiting\", this.onBuffer);\n    player.removeEventListener(\"playing\", this.onBufferEnd);\n    player.removeEventListener(\"pause\", this.onPause);\n    player.removeEventListener(\"seeked\", this.onSeek);\n    player.removeEventListener(\"ended\", this.onEnded);\n    player.removeEventListener(\"error\", this.onError);\n    player.removeEventListener(\"ratechange\", this.onPlayBackRateChange);\n    player.removeEventListener(\"enterpictureinpicture\", this.onEnablePIP);\n    player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    player.removeEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\n    if (!this.shouldUseHLS(url)) {\n      player.removeEventListener(\"canplay\", this.onReady);\n    }\n  }\n  shouldUseAudio(props) {\n    if (props.config.forceVideo) {\n      return false;\n    }\n    if (props.config.attributes.poster) {\n      return false;\n    }\n    return import_patterns.AUDIO_EXTENSIONS.test(props.url) || props.config.forceAudio;\n  }\n  shouldUseHLS(url) {\n    if (IS_SAFARI && this.props.config.forceSafariHLS || this.props.config.forceHLS) {\n      return true;\n    }\n    if (IS_IOS || this.props.config.forceDisableHls) {\n      return false;\n    }\n    return import_patterns.HLS_EXTENSIONS.test(url) || MATCH_CLOUDFLARE_STREAM.test(url);\n  }\n  shouldUseDASH(url) {\n    return import_patterns.DASH_EXTENSIONS.test(url) || this.props.config.forceDASH;\n  }\n  shouldUseFLV(url) {\n    return import_patterns.FLV_EXTENSIONS.test(url) || this.props.config.forceFLV;\n  }\n  load(url) {\n    const {\n      hlsVersion,\n      hlsOptions,\n      dashVersion,\n      flvVersion\n    } = this.props.config;\n    if (this.hls) {\n      this.hls.destroy();\n    }\n    if (this.dash) {\n      this.dash.reset();\n    }\n    if (this.shouldUseHLS(url)) {\n      (0, import_utils.getSDK)(HLS_SDK_URL.replace(\"VERSION\", hlsVersion), HLS_GLOBAL).then(Hls => {\n        this.hls = new Hls(hlsOptions);\n        this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          this.props.onReady();\n        });\n        this.hls.on(Hls.Events.ERROR, (e, data) => {\n          this.props.onError(e, data, this.hls, Hls);\n        });\n        if (MATCH_CLOUDFLARE_STREAM.test(url)) {\n          const id = url.match(MATCH_CLOUDFLARE_STREAM)[1];\n          this.hls.loadSource(REPLACE_CLOUDFLARE_STREAM.replace(\"{id}\", id));\n        } else {\n          this.hls.loadSource(url);\n        }\n        this.hls.attachMedia(this.player);\n        this.props.onLoaded();\n      });\n    }\n    if (this.shouldUseDASH(url)) {\n      (0, import_utils.getSDK)(DASH_SDK_URL.replace(\"VERSION\", dashVersion), DASH_GLOBAL).then(dashjs => {\n        this.dash = dashjs.MediaPlayer().create();\n        this.dash.initialize(this.player, url, this.props.playing);\n        this.dash.on(\"error\", this.props.onError);\n        if (parseInt(dashVersion) < 3) {\n          this.dash.getDebug().setLogToBrowserConsole(false);\n        } else {\n          this.dash.updateSettings({\n            debug: {\n              logLevel: dashjs.Debug.LOG_LEVEL_NONE\n            }\n          });\n        }\n        this.props.onLoaded();\n      });\n    }\n    if (this.shouldUseFLV(url)) {\n      (0, import_utils.getSDK)(FLV_SDK_URL.replace(\"VERSION\", flvVersion), FLV_GLOBAL).then(flvjs => {\n        this.flv = flvjs.createPlayer({\n          type: \"flv\",\n          url\n        });\n        this.flv.attachMediaElement(this.player);\n        this.flv.on(flvjs.Events.ERROR, (e, data) => {\n          this.props.onError(e, data, this.flv, flvjs);\n        });\n        this.flv.load();\n        this.props.onLoaded();\n      });\n    }\n    if (url instanceof Array) {\n      this.player.load();\n    } else if ((0, import_utils.isMediaStream)(url)) {\n      try {\n        this.player.srcObject = url;\n      } catch (e) {\n        this.player.src = window.URL.createObjectURL(url);\n      }\n    }\n  }\n  play() {\n    const promise = this.player.play();\n    if (promise) {\n      promise.catch(this.props.onError);\n    }\n  }\n  pause() {\n    this.player.pause();\n  }\n  stop() {\n    this.player.removeAttribute(\"src\");\n    if (this.dash) {\n      this.dash.reset();\n    }\n  }\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.player.currentTime = seconds;\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.player.volume = fraction;\n  }\n  enablePIP() {\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\n      this.player.requestPictureInPicture();\n    } else if ((0, import_utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== \"picture-in-picture\") {\n      this.player.webkitSetPresentationMode(\"picture-in-picture\");\n    }\n  }\n  disablePIP() {\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\n      document.exitPictureInPicture();\n    } else if ((0, import_utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== \"inline\") {\n      this.player.webkitSetPresentationMode(\"inline\");\n    }\n  }\n  setPlaybackRate(rate) {\n    try {\n      this.player.playbackRate = rate;\n    } catch (error) {\n      this.props.onError(error);\n    }\n  }\n  getDuration() {\n    if (!this.player) return null;\n    const {\n      duration,\n      seekable\n    } = this.player;\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1);\n    }\n    return duration;\n  }\n  getCurrentTime() {\n    if (!this.player) return null;\n    return this.player.currentTime;\n  }\n  getSecondsLoaded() {\n    if (!this.player) return null;\n    const {\n      buffered\n    } = this.player;\n    if (buffered.length === 0) {\n      return 0;\n    }\n    const end = buffered.end(buffered.length - 1);\n    const duration = this.getDuration();\n    if (end > duration) {\n      return duration;\n    }\n    return end;\n  }\n  getSource(url) {\n    const useHLS = this.shouldUseHLS(url);\n    const useDASH = this.shouldUseDASH(url);\n    const useFLV = this.shouldUseFLV(url);\n    if (url instanceof Array || (0, import_utils.isMediaStream)(url) || useHLS || useDASH || useFLV) {\n      return void 0;\n    }\n    if (MATCH_DROPBOX_URL.test(url)) {\n      return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\n    }\n    return url;\n  }\n  render() {\n    const {\n      url,\n      playing,\n      loop,\n      controls,\n      muted,\n      config,\n      width,\n      height\n    } = this.props;\n    const useAudio = this.shouldUseAudio(this.props);\n    const Element = useAudio ? \"audio\" : \"video\";\n    const style = {\n      width: width === \"auto\" ? width : \"100%\",\n      height: height === \"auto\" ? height : \"100%\"\n    };\n    return /* @__PURE__ */import_react.default.createElement(Element, {\n      ref: this.ref,\n      src: this.getSource(url),\n      style,\n      preload: \"auto\",\n      autoPlay: playing || void 0,\n      controls,\n      muted,\n      loop,\n      ...config.attributes\n    }, url instanceof Array && url.map(this.renderSourceElement), config.tracks.map(this.renderTrack));\n  }\n}\n__publicField(FilePlayer, \"displayName\", \"FilePlayer\");\n__publicField(FilePlayer, \"canPlay\", import_patterns.canPlay.file);"],"sourceRoot":""}