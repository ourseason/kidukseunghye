{"version":3,"sources":["../node_modules/react-player/lib/Preview.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Preview_exports","target","all","name","__export","default","Preview","module","exports","import_react","isNodeMode","__esModule","__toESM","__webpack_require__","ICON_SIZE","cache","Component","[object Object]","super","arguments","this","image","e","props","onClick","mounted","fetchImage","prevProps","url","light","_ref","oEmbedUrl","isValidElement","setState","window","fetch","replace","then","response","json","data","thumbnail_url","playIcon","previewTabIndex","previewAriaLabel","state","isElement","flexCenter","display","alignItems","justifyContent","styles","preview","width","height","backgroundImage","backgroundSize","backgroundPosition","cursor","shadow","background","borderRadius","position","borderStyle","borderWidth","borderColor","marginLeft","defaultPlayIcon","createElement","style","className","tabIndex","onKeyPress","handleKeyPress","aria-label"],"mappings":"4EAAA,IAoCAA,EApCAC,EAAAC,OAAAC,OACAC,EAAAF,OAAAG,eACAC,EAAAJ,OAAAK,yBACAC,EAAAN,OAAAO,oBACAC,EAAAR,OAAAS,eACAC,EAAAV,OAAAW,UAAAC,eAaAC,EAAA,CAAAC,EAAAC,EAAAC,EAAAC,KACA,GAAAF,GAAA,kBAAAA,GAAA,oBAAAA,EACA,QAAAG,KAAAZ,EAAAS,GAAAL,EAAAS,KAAAL,EAAAI,QAAAF,GAAAd,EAAAY,EAAAI,EAAA,CACAE,IAAA,IAAAL,EAAAG,GACAG,aAAAJ,EAAAb,EAAAW,EAAAG,KAAAD,EAAAI,aAGA,OAAAP,GAcAQ,EAAA,CAAAC,EAAAL,EAAAM,KAjCA,EAAAD,EAAAL,EAAAM,IAAAN,KAAAK,EAAArB,EAAAqB,EAAAL,EAAA,CACAG,YAAA,EACAI,cAAA,EACAC,UAAA,EACAF,UACCD,EAAAL,GAAAM,EA6BDG,CAAAJ,EAAA,kBAAAL,IAAA,GAAAA,EAAAM,GACAA,GAEAI,EAAA,GA/BA,EAAAC,EAAAC,KACA,QAAAC,KAAAD,EAAA5B,EAAA2B,EAAAE,EAAA,CACAX,IAAAU,EAAAC,GACAV,YAAA,KA6BAW,CAAAJ,EAAA,CACAK,QAAA,IAAAC,IAEAC,EAAAC,SAXAtC,EAWA8B,EAXAf,EAAAX,EAAA,GAAkD,cAClDsB,OAAA,IACC1B,IAUD,IAAAuC,EArBA,EAAAvC,EAAAwC,EAAAT,OAAA,MAAA/B,EAAAC,EAAAS,EAAAV,IAAA,GAAmGe,GAKnGyB,GAAAxC,KAAAyC,WAGCV,EAHD3B,EAAA2B,EAAA,WACAL,MAAA1B,EACAuB,YAAA,IACCvB,IAaD0C,CAA2BC,EAAQ,IACnC,MAAAC,EAAA,OACAC,EAAA,GACA,MAAAT,UAAAG,EAAAO,UACAC,cACAC,SAAAC,WACAzB,EAAA0B,KAAA,cACA1B,EAAA0B,KAAA,SACAC,MAAA,OAEA3B,EAAA0B,KAAA,iBAAAE,IACA,UAAAA,EAAAhC,KAAA,MAAAgC,EAAAhC,KACA8B,KAAAG,MAAAC,YAIAP,oBACAG,KAAAK,SAAA,EACAL,KAAAM,WAAAN,KAAAG,OAEAN,mBAAAU,GACA,MAAAC,IACAA,EAAAC,MACAA,GACKT,KAAAG,MACLI,EAAAC,SAAAD,EAAAE,WACAT,KAAAM,WAAAN,KAAAG,OAGAN,uBACAG,KAAAK,SAAA,EAEAR,WAAAa,GACA,IAAAF,IACAA,EAAAC,MACAA,EAAAE,UACAA,GACKD,EACL,IAAArB,EAAAJ,QAAA2B,eAAAH,GAGA,qBAAAA,EAAA,CAMA,IAAAd,EAAAa,GASA,OAHAR,KAAAa,SAAA,CACAZ,MAAA,OAEAa,OAAAC,MAAAJ,EAAAK,QAAA,QAAgDR,IAAAS,KAAAC,KAAAC,QAAAF,KAAAG,IAChD,GAAAA,EAAAC,eAAArB,KAAAK,QAAA,CACA,MAAAJ,EAAAmB,EAAAC,cAAAL,QAAA,2BAAAA,QAAA,uBACAhB,KAAAa,SAAA,CACAZ,UAEAN,EAAAa,GAAAP,KAdAD,KAAAa,SAAA,CACAZ,MAAAN,EAAAa,UAPAR,KAAAa,SAAA,CACAZ,MAAAQ,IAuBAZ,SACA,MAAAY,MACAA,EAAAL,QACAA,EAAAkB,SACAA,EAAAC,gBACAA,EAAAC,iBACAA,GACKxB,KAAAG,OACLF,MACAA,GACKD,KAAAyB,MACLC,EAAArC,EAAAJ,QAAA2B,eAAAH,GACAkB,EAAA,CACAC,QAAA,OACAC,WAAA,SACAC,eAAA,UAEAC,EAAA,CACAC,QAAA,CACAC,MAAA,OACAC,OAAA,OACAC,gBAAAlC,IAAAyB,SAAsDzB,UAAM,EAC5DmC,eAAA,QACAC,mBAAA,SACAC,OAAA,aACAX,GAEAY,OAAA,CACAC,WAAA,2DACAC,aAAA/C,EACAuC,MAAAvC,EACAwC,OAAAxC,EACAgD,SAAAhB,EAAA,qBACAC,GAEAL,SAAA,CACAqB,YAAA,QACAC,YAAA,mBACAC,YAAA,4CACAC,WAAA,QAGAC,EAAA1D,EAAAJ,QAAA+D,cAAA,OACAC,MAAAlB,EAAAQ,OACAW,UAAA,wBACK7D,EAAAJ,QAAA+D,cAAA,OACLC,MAAAlB,EAAAT,SACA4B,UAAA,6BAEA,OAAA7D,EAAAJ,QAAA+D,cAAA,OACAC,MAAAlB,EAAAC,QACAkB,UAAA,wBACA9C,UACA+C,SAAA5B,EACA6B,WAAApD,KAAAqD,kBACA7B,EAAA,CACA8B,aAAA9B,GACO,IACFE,EAAAjB,EAAA,KAAAa,GAAAyB","file":"static/js/reactPlayerPreview.2ba36854.chunk.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Preview_exports = {};\n__export(Preview_exports, {\n  default: () => Preview\n});\nmodule.exports = __toCommonJS(Preview_exports);\nvar import_react = __toESM(require(\"react\"));\nconst ICON_SIZE = \"64px\";\nconst cache = {};\nclass Preview extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"mounted\", false);\n    __publicField(this, \"state\", {\n      image: null\n    });\n    __publicField(this, \"handleKeyPress\", e => {\n      if (e.key === \"Enter\" || e.key === \" \") {\n        this.props.onClick();\n      }\n    });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchImage(this.props);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      url,\n      light\n    } = this.props;\n    if (prevProps.url !== url || prevProps.light !== light) {\n      this.fetchImage(this.props);\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  fetchImage(_ref) {\n    let {\n      url,\n      light,\n      oEmbedUrl\n    } = _ref;\n    if (import_react.default.isValidElement(light)) {\n      return;\n    }\n    if (typeof light === \"string\") {\n      this.setState({\n        image: light\n      });\n      return;\n    }\n    if (cache[url]) {\n      this.setState({\n        image: cache[url]\n      });\n      return;\n    }\n    this.setState({\n      image: null\n    });\n    return window.fetch(oEmbedUrl.replace(\"{url}\", url)).then(response => response.json()).then(data => {\n      if (data.thumbnail_url && this.mounted) {\n        const image = data.thumbnail_url.replace(\"height=100\", \"height=480\").replace(\"-d_295x166\", \"-d_640\");\n        this.setState({\n          image\n        });\n        cache[url] = image;\n      }\n    });\n  }\n  render() {\n    const {\n      light,\n      onClick,\n      playIcon,\n      previewTabIndex,\n      previewAriaLabel\n    } = this.props;\n    const {\n      image\n    } = this.state;\n    const isElement = import_react.default.isValidElement(light);\n    const flexCenter = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    };\n    const styles = {\n      preview: {\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: image && !isElement ? `url(${image})` : void 0,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        cursor: \"pointer\",\n        ...flexCenter\n      },\n      shadow: {\n        background: \"radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)\",\n        borderRadius: ICON_SIZE,\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        position: isElement ? \"absolute\" : void 0,\n        ...flexCenter\n      },\n      playIcon: {\n        borderStyle: \"solid\",\n        borderWidth: \"16px 0 16px 26px\",\n        borderColor: \"transparent transparent transparent white\",\n        marginLeft: \"7px\"\n      }\n    };\n    const defaultPlayIcon = /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style: styles.shadow,\n      className: \"react-player__shadow\"\n    }, /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style: styles.playIcon,\n      className: \"react-player__play-icon\"\n    }));\n    return /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style: styles.preview,\n      className: \"react-player__preview\",\n      onClick,\n      tabIndex: previewTabIndex,\n      onKeyPress: this.handleKeyPress,\n      ...(previewAriaLabel ? {\n        \"aria-label\": previewAriaLabel\n      } : {})\n    }, isElement ? light : null, playIcon || defaultPlayIcon);\n  }\n}"],"sourceRoot":""}